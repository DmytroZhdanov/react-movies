{"version":3,"file":"static/js/251.0cb5ee98.chunk.js","mappings":"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","sources":["ApiService/ApiService.js","Pages/Home/Home.styled.js","Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Reviews/Reviews.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '519ac6d7fa65fad3709213360518958a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_DAY_ENDPOINT = '/trending/movie/day';\nconst SEARCH_QUERY_ENDPOINT = '/search/movie';\nconst BY_ID_ENDPOINT = '/movie';\n\nasync function fetchDayTrends() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${TRENDING_DAY_ENDPOINT}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nasync function fetchMovieByQuery(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${SEARCH_QUERY_ENDPOINT}?api_key=${API_KEY}&language=en-US&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nasync function fetchMovieById(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${BY_ID_ENDPOINT}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${BY_ID_ENDPOINT}/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${BY_ID_ENDPOINT}/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport {\n  fetchDayTrends,\n  fetchMovieByQuery,\n  fetchMovieById,\n  fetchReviews,\n  fetchCast,\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n`","import { fetchMovieByQuery } from 'ApiService/ApiService';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SorryText } from 'components/Reviews/Reviews.styled';\nimport { Section } from 'Pages/Home/Home.styled';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchMovieByQuery(query);\n        if (response.results.length > 0) {\n          setMovies(response.results);\n        } else {\n          throw new Error();\n        }\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { query } = e.currentTarget.elements;\n    const searchQuery = query.value.trim();\n\n    if (searchQuery === '') return;\n\n    setSearchParams({ query: searchQuery });\n  };\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <Section>\n      {isLoading && <Loader />}\n      <Form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n        <button>Search</button>\n      </Form>\n      {movies && <MoviesList movies={movies} />}\n      {hasError && (\n        <SorryText>{`Sorry... We couldn't find any movie matching ${query}`}</SorryText>\n      )}\n    </Section>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, original_title }) => {\n        return (\n          <li key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title || original_title}\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const Author = styled.h3`\n  font-weight: 600;\n  margin-bottom: 8px;\n`;\n\nexport const Content = styled.p`\n  margin-left: 20px;\n`;\n\nexport const SorryText = styled.p`\n  margin-top: 20px;\n  text-align: center;\n`;\n"],"names":["API_KEY","BASE_URL","TRENDING_DAY_ENDPOINT","SEARCH_QUERY_ENDPOINT","BY_ID_ENDPOINT","fetchDayTrends","_fetchDayTrends","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","error","message","stop","fetchMovieByQuery","_x","_fetchMovieByQuery","_callee2","query","_context2","fetchMovieById","_x2","_fetchMovieById","_callee3","id","_context3","fetchReviews","_x3","_fetchReviews","_callee4","_context4","results","fetchCast","_x4","_fetchCast","_callee5","_context5","cast","Section","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Form","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","hasError","setHasError","_useState7","_useState8","inputValue","setInputValue","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","getMovies","_ref","length","Error","finish","_jsxs","children","_jsx","Loader","onSubmit","e","preventDefault","searchQuery","currentTarget","elements","value","trim","type","name","onChange","target","MoviesList","SorryText","List","location","useLocation","map","_ref2","title","original_title","Link","to","state","from","Author","Content","_templateObject3"],"sourceRoot":""}