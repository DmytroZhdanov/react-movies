{"version":3,"file":"static/js/168.a9b5d75c.chunk.js","mappings":"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","sources":["ApiService/ApiService.js","Pages/Home/Home.styled.js","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '519ac6d7fa65fad3709213360518958a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_DAY_ENDPOINT = '/trending/movie/day';\nconst SEARCH_QUERY_ENDPOINT = '/search/movie';\nconst BY_ID_ENDPOINT = '/movie';\n\nasync function fetchDayTrends() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${TRENDING_DAY_ENDPOINT}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nasync function fetchMovieByQuery(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${SEARCH_QUERY_ENDPOINT}?api_key=${API_KEY}&language=en-US&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nasync function fetchMovieById(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${BY_ID_ENDPOINT}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${BY_ID_ENDPOINT}/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${BY_ID_ENDPOINT}/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport {\n  fetchDayTrends,\n  fetchMovieByQuery,\n  fetchMovieById,\n  fetchReviews,\n  fetchCast,\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BackBtn = styled(Link)`\n  width: 100px;\n  display: block;\n  padding: 4px;\n  border: 1px solid #0f0f0f;\n  border-radius: 8px;\n  color: #0f0f0f;\n  text-align: center;\n  text-decoration: none;\n  font-weight: 500;\n  margin-bottom: 20px;\n\n  &:hover,\n  &:focus {\n    border-color: red;\n    color: red;\n  }\n`;\n\nexport const MainInfo = styled.div`\n  max-height: 450px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n`;\n\nexport const SubTitle = styled.h2`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 8px;\n`;\n\nexport const Text = styled.p`\n  width: calc(100% - 320px);\n  margin-bottom: 20px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 20px 0;\n  border-top: 1px solid #0f0f0f;\n  border-bottom: 1px solid #0f0f0f;\n`;\nexport const AdditionalTitle = styled.h2`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 12px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-left: 20px;\n`;\n","import { fetchMovieById } from 'ApiService/ApiService';\nimport { Section, Title } from 'Pages/Home/Home.styled';\nimport { Suspense, useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  AdditionalInfo,\n  AdditionalTitle,\n  BackBtn,\n  Image,\n  List,\n  MainInfo,\n  SubTitle,\n  Text,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [imagePath, setImagePath] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [score, setScore] = useState(null);\n  const [overview, setOverview] = useState(null);\n  const [genres, setGenres] = useState(null);\n\n  const location = useLocation();\n  const backPath = location.state?.from ?? '/';\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const response = await fetchMovieById(movieId);\n\n        setImagePath(response.poster_path);\n        setTitle(response.title);\n        setScore((response.vote_average * 10).toFixed());\n        setOverview(response.overview);\n        setGenres(response.genres.map(({ name }) => name).join(', '));\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <Section>\n      <BackBtn to={backPath}>{`<- Go back`}</BackBtn>\n      <MainInfo>\n        <Image\n          src={imagePath && `https://image.tmdb.org/t/p/w500${imagePath}`}\n          alt={title}\n        />\n        <Title>{title}</Title>\n        <Text>User score: {score}%</Text>\n        <SubTitle>Overview</SubTitle>\n        <Text>{overview}</Text>\n        <SubTitle>Genres</SubTitle>\n        <Text>{genres}</Text>\n      </MainInfo>\n      <AdditionalInfo>\n        <AdditionalTitle>Additional information</AdditionalTitle>\n        <List>\n          <li>\n            <Link to=\"cast\" state={{ from: backPath }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backPath }}>\n              Reviews\n            </Link>\n          </li>\n        </List>\n      </AdditionalInfo>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","TRENDING_DAY_ENDPOINT","SEARCH_QUERY_ENDPOINT","BY_ID_ENDPOINT","fetchDayTrends","_fetchDayTrends","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","error","message","stop","fetchMovieByQuery","_x","_fetchMovieByQuery","_callee2","query","_context2","fetchMovieById","_x2","_fetchMovieById","_callee3","id","_context3","fetchReviews","_x3","_fetchReviews","_callee4","_context4","results","fetchCast","_x4","_fetchCast","_callee5","_context5","cast","Section","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","List","_templateObject3","BackBtn","Link","MainInfo","Image","SubTitle","_templateObject4","Text","_templateObject5","AdditionalInfo","_templateObject6","AdditionalTitle","_templateObject7","_templateObject8","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","imagePath","setImagePath","_useState3","_useState4","title","setTitle","_useState5","_useState6","score","setScore","_useState7","_useState8","overview","setOverview","_useState9","_useState10","genres","setGenres","backPath","useLocation","state","from","movieId","useParams","useEffect","getMovieDetails","_ref","poster_path","vote_average","toFixed","map","_ref2","name","join","_jsxs","children","_jsx","to","src","alt","Suspense","fallback","Outlet"],"sourceRoot":""}